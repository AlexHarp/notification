<?php
/**
* @file
* A description of what your module does.
*/
use Drupal\Core\Entity\EntityInterface;
use Drupal\user\Entity\User;
//use Drupal\Core\Entity;
/**
 * Implements hook_entity_update().
 */
function notification_node_update(EntityInterface $entity){

   $result = null;
   $sent = false;
   $cmiEmail = 'alexis.harper@ga.gov.au';

   switch($entity->get('moderation_state')->getString()) {

       case 'awaiting_branch_head_approval':
           $mailManager = \Drupal::service('plugin.manager.mail');
           $module = "notification";
           $key = 'branch_head_notification';
           $entUser = $entity->get('field_please_select_your_branch_')->getvalue();
	   $entUser = \Drupal::entityTypeManager()->getStorage('user')->load($entUser[0]['target_id']);
           $to = $entUser->getEmail();
           $params['message'] = "params message test";/* $entity->get('body')->value;*/
           $params['title'] = $entity->gettitle();
           $params['user'] = $entity->getRevisionUser()->getEmail();
           $params['revdate'] = gmdate("Y-m-d H:i:s", $entity->getRevisionCreationTime());
	   $params['revlog'] = $entity->getRevisionLogMessage();
           $params['url'] = $entity->toUrl()->toString();
	   $params['to'] = $to;
           $langcode = \Drupal::currentUser()->getPreferredLangcode();
           $send = true;
           $result = $mailManager->mail($module, $key, $to, $langcode, $params, NULL, $send);
	   $sent = true;
           break;

       case 'awaiting_project_lead_approval':
kint($entity);
           $mailManager = \Drupal::service('plugin.manager.mail');
           $module = "notification";
           $key = 'project_lead_notification';
           $entUser = $entity->get('field_project_lead_')->getvalue();
	   $entUser = \Drupal::entityTypeManager()->getStorage('user')->load($entUser[0]['target_id']);
           $to = $entUser->getEmail();
           $params['message'] = "params message test";/* $entity->get('body')->value;*/
           $params['title'] = $entity->gettitle();
           $params['user'] = $entity->getRevisionUser()->getEmail();
           $params['url'] = $entity->toUrl()->toString();
	   $params['to'] = $to;
           $langcode = \Drupal::currentUser()->getPreferredLangcode();
           $send = true;
           $result = $mailManager->mail($module, $key, $to, $langcode, $params, NULL, $send);
	   $sent = true;
           break;

       case 'published':
           $mailManager = \Drupal::service('plugin.manager.mail');
           $module = "notification";
           $key = 'published_notification';
           $to = 'alexis.harper@ga.gov.au';
           $params['message'] = "params message test";/* $entity->get('body')->value;*/
           $params['title'] = $entity->gettitle();
           $params['user'] = $entity->getRevisionUser()->getEmail();
           $params['url'] = $entity->toUrl()->toString();
           $langcode = \Drupal::currentUser()->getPreferredLangcode();
           $send = true;
           $result = $mailManager->mail($module, $key, $to, $langcode, $params, NULL, $send);
           $to = 'Katherine.Fontaine@ga.gov.au';
           $result = $mailManager->mail($module, $key, $to, $langcode, $params, NULL, $send);
	   $sent = true;
           break;
   }
      if($sent){
	    if ($result['result'] !== true) {
		drupal_set_message(t('There was a problem sending your message and it was not sent.'), 'error');
	    } else {
		drupal_set_message(t('Your message has been sent.'));
	    }
      }
}

function notification_mail ($key, &$message, $params) {

    switch ($key) {
        case 'branch_head_notification':
            // Set headers etc
            $message['from'] = \Drupal::config('system.site')->get('mail');
            $message['subject'] = t('CMI: @title awaiting approval (Branch Head)', array('@title' => $params['title']));
            $message['body'][] = 
t('Hello @to,

The product @title is ready for Branch Head approval, requested by @user. Please click the link below to log on and view the metadata record for @title.
http://cmi.ga.gov.au@url

This was approved by Project Leader @user on @revdate  and includes the following comments:

@revlog

Once you have reviewed the content, and if you approve, please follow these steps:
    1. Scroll to the bottom of the page
    2. Include any relevant approval comments in the ‘Log Message’ box.
    3. Change the ‘moderation state’ to ‘Approved: Publication & Delivery Preparation’ (drop down list).
    4. Click Apply.

Regards,
CMI', array('@title' => $params['title'], '@url' => $params['url'], '@user' => $params['user'], '@to' => $params['to'], '@revdate' => $params['revdate'], '@revlog' => $paramd['revlog']));            
            break;

       case 'project_lead_notification':
            $message['from'] = \Drupal::config('system.site')->get('mail');
            $message['subject'] = t('CMI: @title  awaiting approval (Project Lead)', array('@title' => $params['title']));
            $message['body'][] =
t('Hello @to,

The product @title is ready for Project Lead approval, requested by @user. Please click the link below to log on and view the metadata record for @title.
http://cmi.ga.gov.au@url

Once you have reviewed the content, and if you approve, please follow these steps:
    1. Scroll to the bottom of the page
    2. Include any relevant approval comments in the ‘Log Message’ box.
    3. Change the ‘moderation state’ to ‘Request Branch Head Approval’ (drop down list).
    4. Click Apply.

Regards,
CMI', array('@title' => $params['title'], '@url' => $params['url'], '@user' => $params['user'], '@to' => $params['to']));            
            break;

       case 'published_notification':
            $message['from'] = \Drupal::config('system.site')->get('mail');
            $message['subject'] = t('THIS IS A TEST EMAIL CMI: @title has been published', array('@title' => $params['title']));
            $message['body'][] = t('The product @title has been published by @user. The product can be found here: http://cmi.ga.gov.au@url', array('@title' => $params['title'], '@url' => $params['url'], '@user' => $params['user']));            
            break;
    }
}
