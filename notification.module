<?php
/**
* @file
* A description of what your module does.
*/
use Drupal\Core\Entity\EntityInterface;
use Drupal\user\Entity\User;
//use Drupal\Core\Entity;
/**
 * Implements hook_entity_update().
 */
function notification_node_update(EntityInterface $entity){

   $result = null;

   switch($entity->get('moderation_state')->getString()) {

       case 'awaiting_branch_head_approval':
           $mailManager = \Drupal::service('plugin.manager.mail');
           $module = "notification";
           $key = 'branch_head_notification';
           $entUser = $entity->get('field_please_select_your_branch_')->getvalue();
	   $entUser = \Drupal::entityTypeManager()->getStorage('user')->load($entUser[0]['target_id']);
           $to = $entUser->getEmail();
           $params['message'] = "params message test";/* $entity->get('body')->value;*/
           $params['title'] = $entity->gettitle();
           $params['user'] = $entity->getRevisionUser()->getEmail();
           $params['url'] = $entity->toUrl()->toString();
           $langcode = \Drupal::currentUser()->getPreferredLangcode();
           $send = true;
           $result = $mailManager->mail($module, $key, $to, $langcode, $params, NULL, $send);
           break;

       case 'awaiting_project_lead_approval':
           $mailManager = \Drupal::service('plugin.manager.mail');
           $module = "notification";
           $key = 'project_lead__notification';
           $entUser = $entity->get('field_project_lead_')->getvalue();
	   $entUser = \Drupal::entityTypeManager()->getStorage('user')->load($entUser[0]['target_id']);
           $to = $entUser->getEmail();
           $params['message'] = "params message test";/* $entity->get('body')->value;*/
           $params['title'] = $entity->gettitle();
           $params['user'] = $entity->getRevisionUser()->getEmail();
           $params['url'] = $entity->toUrl()->toString();
           $langcode = \Drupal::currentUser()->getPreferredLangcode();
           $send = true;
           $result = $mailManager->mail($module, $key, $to, $langcode, $params, NULL, $send);
           break;

       case 'published':
           $mailManager = \Drupal::service('plugin.manager.mail');
           $module = "notification";
           $key = 'published_notification';
           $to = 'alexis.harper@ga.gov.au';
           $params['message'] = "params message test";/* $entity->get('body')->value;*/
           $params['title'] = $entity->gettitle();
           $params['user'] = $entity->getRevisionUser()->getEmail();
           $params['url'] = $entity->toUrl()->toString();
           $langcode = \Drupal::currentUser()->getPreferredLangcode();
           $send = true;
           $result = $mailManager->mail($module, $key, $to, $langcode, $params, NULL, $send);
           $to = 'Katherine.Fontaine@ga.gov.au';
           $result = $mailManager->mail($module, $key, $to, $langcode, $params, NULL, $send);
           break;
   }

    if ($result['result'] !== true) {
        drupal_set_message(t('There was a problem sending your message and it was not sent.'), 'error');
    } else {
        drupal_set_message(t('Your message has been sent.'));
    }
}

function notification_mail ($key, &$message, $params) {

    switch ($key) {
        case 'branch_head_notification':
            // Set headers etc
            $message['from'] = \Drupal::config('system.site')->get('mail');
            $message['subject'] = t('THIS IS A TEST EMAIL CMI: @title requires branch head review', array('@title' => $params['title']));
            $message['body'][] = t('The product @title has been submitted by @user for review. The product can be found here: http://cmi.ga.gov.au@url', array('@title' => $params['title'], '@url' => $params['url'], '@user' => $params['user']));            
            break;

       case 'project_lead_notification':
            $message['from'] = \Drupal::config('system.site')->get('mail');
            $message['subject'] = t('THIS IS A TEST EMAIL CMI: @title requires project lead review', array('@title' => $params['title']));
            $message['body'][] = t('The product @title has been submitted by @user for review. The product can be found here: http://cmi.ga.gov.au@url', array('@title' => $params['title'], '@url' => $params['url'], '@user' => $params['user']));            
            break;

       case 'published_notification':
            $message['from'] = \Drupal::config('system.site')->get('mail');
            $message['subject'] = t('THIS IS A TEST EMAIL CMI: @title has been published', array('@title' => $params['title']));
            $message['body'][] = t('The product @title has been published by @user. The product can be found here: http://cmi.ga.gov.au@url', array('@title' => $params['title'], '@url' => $params['url'], '@user' => $params['user']));            
            break;
    }
}
